# Production Environment Variables for Medio Video Platform
# Copy this file to .env.production and fill in your values
# CRITICAL: All values marked as REQUIRED must be set before production deployment

# ====================
# SERVER CONFIGURATION
# ====================
NODE_ENV=production
PORT=5000
# REQUIRED: Set to your production frontend URL (e.g., https://medio.example.com)
FRONTEND_URL=https://your-production-domain.com

# ====================
# DATABASE CONFIGURATION
# ====================
# Option 1: Connection String (RECOMMENDED for production)
# REQUIRED: Use SSL mode for production database connections
DATABASE_URL=postgresql://user:password@host:port/database?sslmode=require

# Option 2: Individual Settings (if not using connection string)
# DB_HOST=your-db-host.com
# DB_PORT=5432
# DB_NAME=medio_production
# DB_USER=medio_prod_user
# DB_PASSWORD=your_secure_database_password_here

# SSL Configuration for Production Database
DB_SSL_REJECT_UNAUTHORIZED=true
# Provide CA certificate for database SSL if using self-signed certificates
# DB_SSL_CA=/path/to/ca-certificate.pem

# Database Connection Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_POOL_IDLE_TIMEOUT_MS=30000
DB_CONNECTION_TIMEOUT_MS=5000

# ====================
# SECURITY CONFIGURATION
# ====================
# REQUIRED: Generate secure secrets with at least 64 characters
# Generate using: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=CHANGE_THIS_TO_64_CHAR_MINIMUM_SECURE_SECRET
COOKIE_SECRET=CHANGE_THIS_TO_64_CHAR_MINIMUM_SECURE_SECRET

# Session Configuration
SESSION_TIMEOUT_HOURS=24
REFRESH_TOKEN_EXPIRY_DAYS=30

# ====================
# RATE LIMITING
# ====================
# General API rate limiting
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100

# Authentication endpoints rate limiting
AUTH_RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
AUTH_RATE_LIMIT_MAX_REQUESTS=5

# Public endpoints rate limiting (kids mode)
PUBLIC_RATE_LIMIT_WINDOW_MS=60000  # 1 minute
PUBLIC_RATE_LIMIT_MAX_REQUESTS=10

# ====================
# MONITORING & LOGGING
# ====================
# REQUIRED: Set up Sentry for production error tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=production
SENTRY_SAMPLE_RATE=0.1  # Sample 10% of transactions for performance monitoring

# Logging Configuration
LOG_LEVEL=info  # Options: error, warn, info, http, debug
LOG_DIR=/var/log/medio  # Directory for log files
LOG_MAX_SIZE=10m  # Maximum size of log files before rotation
LOG_MAX_FILES=30  # Number of log files to keep
LOG_COMPRESS=true  # Compress rotated log files

# ====================
# CDN CONFIGURATION
# ====================
# CDN for static assets (optional but recommended)
CDN_URL=https://cdn.example.com
CDN_ENABLED=true

# ====================
# BACKUP CONFIGURATION
# ====================
# Database backup settings
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=medio-backups
BACKUP_S3_REGION=us-east-1
# AWS credentials for backup (if not using IAM roles)
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key

# ====================
# EMAIL CONFIGURATION (Optional)
# ====================
# For sending notifications and alerts
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_SECURE=false
# SMTP_USER=your_smtp_user
# SMTP_PASSWORD=your_smtp_password
# EMAIL_FROM=noreply@medio.example.com
# ADMIN_EMAIL=admin@medio.example.com

# ====================
# REDIS CONFIGURATION (Optional)
# ====================
# For session storage and caching
# REDIS_URL=redis://localhost:6379
# REDIS_PASSWORD=your_redis_password
# REDIS_DB=0
# REDIS_KEY_PREFIX=medio:

# ====================
# FEATURE FLAGS
# ====================
ENABLE_ANALYTICS=true
ENABLE_DEBUG_LOGGING=false
ENABLE_API_DOCS=false  # Disable in production
ENABLE_PLAYGROUND=false  # Disable GraphQL playground in production

# ====================
# PERFORMANCE
# ====================
# Enable clustering for better CPU utilization
CLUSTER_ENABLED=true
WORKER_PROCESSES=0  # 0 = number of CPU cores

# Request timeout
REQUEST_TIMEOUT_MS=30000  # 30 seconds

# ====================
# HEALTH CHECKS
# ====================
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health
HEALTH_CHECK_INTERVAL_MS=30000  # Check every 30 seconds