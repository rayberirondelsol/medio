name: Visual Regression Tests

on:
  pull_request:
    branches: [master, main, develop]
  push:
    branches: [master, main]
  workflow_dispatch:

jobs:
  visual-tests:
    name: Run Visual Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        project:
          - chromium-desktop
          - firefox-desktop
          - webkit-desktop
          - tablet-ipad
          - mobile-iphone

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Setup test database
        run: |
          cd backend
          cp .env.example .env
          npm run migrate

      - name: Run visual tests
        run: npx playwright test --project=${{ matrix.project }} tests/visual/
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.project }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30

      - name: Upload visual diffs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-diffs-${{ matrix.project }}
          path: tests/__snapshots__/**/*-diff.png
          retention-days: 7

  visual-tests-summary:
    name: Visual Tests Summary
    runs-on: ubuntu-latest
    needs: visual-tests
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate summary report
        run: |
          echo "# Visual Regression Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Status by Browser/Device" >> $GITHUB_STEP_SUMMARY

          if [ -d "artifacts" ]; then
            for dir in artifacts/*; do
              project=$(basename "$dir" | sed 's/playwright-results-//')
              echo "- **${project}**: ✅ Completed" >> $GITHUB_STEP_SUMMARY
            done
          fi

      - name: Check for visual diffs
        run: |
          if find artifacts -name "*-diff.png" | grep -q .; then
            echo "::warning::Visual differences detected! Review the uploaded artifacts."
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ **Visual differences detected!** Please review the artifacts." >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ No visual regressions detected!" >> $GITHUB_STEP_SUMMARY
          fi
