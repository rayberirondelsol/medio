CSRF FIX - QUICK REFERENCE
============================

ISSUE:         POST /api/nfc/chips returns 403 Forbidden in production
ROOT CAUSE:    csurf middleware doesn't check X-CSRF-Token header
FIX:           Added custom value function to csrf() configuration
FILE:          backend/src/server.js (lines 141-155)
COMMIT:        3c6b9bb
CHANGE SIZE:   8 lines (1 line comment fix, 4 lines added)

THE FIX IN ONE LINE:
====================

value: (req) => {
  return req.headers['x-csrf-token'] || req.body._csrf || req.query._csrf;
}

WHAT IT DOES:
=============

1. Tells csurf where to find CSRF tokens
2. Checks X-CSRF-Token header FIRST (works for cross-domain)
3. Falls back to body._csrf (backward compatibility)
4. Falls back to query._csrf (legacy support)

WHY IT MATTERS:
===============

- Frontend sends token via header
- Backend was ignoring headers (only checking body/query)
- Different domains = cookies unreliable
- Headers work reliably across domains

RESULT:
=======

POST /api/nfc/chips now succeeds (201 Created)
instead of failing with 403 Forbidden

All cross-domain authenticated requests now work.

FILES AFFECTED:
===============

Modified:   backend/src/server.js (lines 141-155)
Unchanged:  src/utils/axiosConfig.ts (already correct)
Unchanged:  backend/src/routes/nfc.js (route logic intact)

DEPLOYMENT:
===========

Committed: git commit 3c6b9bb
Status:    Ready for production
Fly.io:    Will auto-deploy

VERIFICATION:
==============

After deployment:
1. Go to https://medio-react-app.fly.dev
2. Log in
3. Try to register NFC chip
4. Expected: Success (201 Created), not 403 error

SECURITY IMPACT:
================

Before:  403 error blocks all cross-domain POST requests (too strict)
After:   Proper CSRF validation with header support (correct)

No security downgrade. Header-based CSRF is industry standard.

