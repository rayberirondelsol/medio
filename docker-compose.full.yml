version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: medio
      POSTGRES_USER: medio
      POSTGRES_PASSWORD: medio_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medio"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: medio
      DB_USER: medio
      DB_PASSWORD: medio_password
      JWT_SECRET: your-secret-key-change-in-production
      FRONTEND_URL: http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
      - /app/node_modules
    command: sh -c "npm run migrate && npm run dev"

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:5000/api
      CHOKIDAR_USEPOLLING: true
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - /app/node_modules
    depends_on:
      - backend
    stdin_open: true
    tty: true

  # Nginx Reverse Proxy (for production-like setup)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    profiles:
      - production

volumes:
  postgres_data: