# Production Nginx Configuration for Medio Video Platform
# This configuration includes SSL/TLS, security headers, caching, and CDN support

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;

# Cache zones
proxy_cache_path /var/cache/nginx/medio levels=1:2 keys_zone=medio_cache:10m max_size=1g inactive=60m use_temp_path=off;

# Upstream backend servers
upstream backend {
    least_conn;
    server backend:5000 max_fails=3 fail_timeout=30s;
    # Add more backend servers for load balancing
    # server backend2:5000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name medio.example.com www.medio.example.com;
    
    # Allow Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name medio.example.com www.medio.example.com;
    
    # SSL/TLS Configuration
    ssl_certificate /etc/letsencrypt/live/medio.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/medio.example.com/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # SSL session caching
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/medio.example.com/chain.pem;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # HSTS (6 months with preload)
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https:; media-src 'self'; object-src 'none'; frame-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'self';" always;
    
    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;
    
    # Brotli compression (if module is available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;
    
    # Client body size limit (for video uploads)
    client_max_body_size 100M;
    client_body_buffer_size 1M;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;
    
    # API endpoints
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Connection settings
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Proxy to backend
        proxy_pass http://backend;
        
        # Disable buffering for real-time endpoints
        location ~ ^/api/(sessions/heartbeat|nfc/scan) {
            proxy_buffering off;
            proxy_pass http://backend;
        }
        
        # Strict rate limiting for auth endpoints
        location ~ ^/api/auth/(login|register) {
            limit_req zone=auth burst=2 nodelay;
            proxy_pass http://backend;
        }
    }
    
    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        proxy_pass http://backend/api/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    # Static assets with long cache
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Enable CDN if configured
        # sub_filter 'src="/static/' 'src="https://cdn.medio.example.com/static/';
        # sub_filter 'href="/static/' 'href="https://cdn.medio.example.com/static/';
        # sub_filter_once off;
    }
    
    # Media files (videos, images)
    location /media/ {
        expires 30d;
        add_header Cache-Control "public";
        
        # Enable CDN for media
        # sub_filter 'src="/media/' 'src="https://cdn.medio.example.com/media/';
        # sub_filter_once off;
        
        # Optional: Serve from separate media server
        # proxy_pass https://media.medio.example.com/;
    }
    
    # Service worker
    location /service-worker.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        expires 0;
    }
    
    # Manifest file
    location /manifest.json {
        add_header Cache-Control "no-cache";
        expires 1h;
    }
    
    # Favicon and app icons
    location ~ ^/(favicon\.ico|logo192\.png|logo512\.png|apple-touch-icon\.png)$ {
        expires 30d;
        add_header Cache-Control "public";
        access_log off;
    }
    
    # React app (catch-all for client-side routing)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache HTML for short period
        location = /index.html {
            expires 1h;
            add_header Cache-Control "no-cache";
        }
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
    }
    
    location = /50x.html {
        internal;
    }
    
    # Access logs with custom format
    access_log /var/log/nginx/medio-access.log combined buffer=64k flush=5s;
    error_log /var/log/nginx/medio-error.log warn;
}

# Status page for monitoring (restricted access)
server {
    listen 8080;
    listen [::]:8080;
    server_name _;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        # Restrict access to monitoring systems
        allow 127.0.0.1;
        allow ::1;
        # allow 10.0.0.0/8;  # Internal network
        deny all;
    }
}